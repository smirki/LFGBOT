import { Client, Message, Emoji, TextChannel, Invite, TextableChannel, MessageContent, MessageFile } from "eris";
import { TReaction } from "./utils";
/**
 * Splits a string into chunks, preferring to split at newlines if possible
 */
export declare function splitIntoCleanChunks(str: string, maxChunkLength?: number): string[];
/**
 * Splits a message into chunks that fit into Discord's message length limit (2000) while also retaining leading and
 * trailing line breaks, open code blocks, etc. between chunks
 */
export declare function splitMessageIntoChunks(str: string): string[];
/**
 * Sends a message to the specified channel, splitting it into multiple shorter messages if the message text goes over
 * the Discord message length limit (2000)
 */
export declare function createChunkedMessage(channel: TextableChannel, messageText: string): Promise<Message[]>;
/**
 * Returns a promise that resolves when one of the specified reactions are used on the spcified message, optionally
 * restricted to reactions by a specific user only
 */
export declare function waitForReaction(bot: Client, msg: Message, availableReactions: TReaction[], restrictToUserId?: string, timeout?: number): Promise<Emoji>;
/**
 * Returns a promise that resolves when the specified channel gets a new message, optionally restricted to a message by
 * a specific user only
 */
export declare function waitForReply(bot: Client, channel: TextChannel, restrictToUserId?: string, timeout?: number): Promise<Message>;
/**
 * Shorthand for sending a message to the same channel as another message
 */
export declare function reply(msg: Message, content: MessageContent, file: MessageFile): Promise<Message>;
/**
 * Disables link previews in the string by wrapping detected links in < and >
 */
export declare function disableLinkPreviews(str: string): string;
/**
 * Deactivates user/role mentions in the string by adding an invisible unicode char after each @-character
 */
export declare function deactivateMentions(str: string): string;
/**
 * Disables code blocks in the string by adding an invisible unicode char after each backtick
 */
export declare function disableCodeBlocks(str: string): string;
/**
 * Returns the full invite link for an invite object
 */
export declare function getInviteLink(inv: Invite): string;
